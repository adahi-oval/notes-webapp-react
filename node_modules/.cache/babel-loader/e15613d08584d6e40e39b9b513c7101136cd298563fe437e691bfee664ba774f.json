{"ast":null,"code":"var _jsxFileName = \"/home/adahi/UyA/usabilidad/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Form, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  let validityCheck = true;\n  const handleLogin = e => {\n    e.preventDefault();\n\n    // Validación de campos\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (email === '') {\n      $(emailRef.current).addClass('is-invalid');\n      return;\n    }\n    if (password === '' && !passwordRegex.test(password)) {\n      $(passwordRef.current).addClass('is-invalid');\n      return;\n    } else {\n      $(passwordRef.current).removeClass('is-invalid');\n    }\n\n    // Resto de la lógica de inicio de sesión\n    console.log('Email:', email);\n    console.log('Contraseña:', password);\n  };\n  const renderPasswordTooltip = props => /*#__PURE__*/_jsxDEV(Tooltip, {\n    id: \"password-tooltip\",\n    ...props,\n    children: \"La contrase\\xF1a debe tener al menos 8 caracteres, una letra may\\xFAscula y un car\\xE1cter especial.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Ingresa tu email\",\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: \"Ingresa un email v\\xE1lido.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"right\",\n        overlay: renderPasswordTooltip,\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Ingresa tu contrase\\xF1a\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: \"La contrase\\xF1a debe tener al menos 8 caracteres, una letra may\\xFAscula y un car\\xE1cter especial.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"mt-3\",\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"kzhJ70L4zutTer2/sxB1ru7ui/E=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useRef","Form","Button","OverlayTrigger","Tooltip","$","jsxDEV","_jsxDEV","LoginForm","_s","emailRef","passwordRef","validityCheck","handleLogin","e","preventDefault","email","current","value","password","passwordRegex","addClass","test","removeClass","console","log","renderPasswordTooltip","props","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","ref","className","placement","overlay","variant","_c","$RefreshReg$"],"sources":["/home/adahi/UyA/usabilidad/src/components/LoginForm.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport { Form, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport $ from 'jquery';\n\nexport const LoginForm = () => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  let validityCheck = true;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    // Validación de campos\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n    if (email === '') {\n      $(emailRef.current).addClass('is-invalid');\n      return;\n    }\n\n    if (password === '' && !passwordRegex.test(password)) {\n      $(passwordRef.current).addClass('is-invalid');\n      return;\n    }else{\n      $(passwordRef.current).removeClass('is-invalid');\n    }\n\n    // Resto de la lógica de inicio de sesión\n    console.log('Email:', email);\n    console.log('Contraseña:', password);\n\n  };\n\n  const renderPasswordTooltip = (props) => (\n    <Tooltip id=\"password-tooltip\" {...props}>\n      La contraseña debe tener al menos 8 caracteres, una letra mayúscula y un carácter especial.\n    </Tooltip>\n  );\n  return (\n    <Form onSubmit={handleLogin}>\n      <Form.Group controlId=\"formEmail\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control\n          type=\"email\"\n          placeholder=\"Ingresa tu email\"\n          ref={emailRef}\n        />\n        <div className=\"invalid-feedback\">Ingresa un email válido.</div>\n      </Form.Group>\n\n      <Form.Group controlId=\"formPassword\">\n        <Form.Label>Contraseña</Form.Label>\n        <OverlayTrigger placement=\"right\" overlay={renderPasswordTooltip}>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Ingresa tu contraseña\"\n            ref={passwordRef}\n          />\n        </OverlayTrigger>\n        <div className=\"invalid-feedback\">\n          La contraseña debe tener al menos 8 caracteres, una letra mayúscula y un carácter especial.\n        </div>\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\" className='mt-3'>\n        Iniciar Sesión\n      </Button>\n    </Form>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}